@mixin widescreen {
  @media screen and (max-aspect-ratio: 16/9){
    & {
      @content;
    }
  }
}
// @mixin widescreenadd {
//   @media screen and (max-aspect-ratio: 4/3) {
//     & {
//       @content;
//     }
//   }
// }
@mixin px2res($prop, $values...) {
  $max: length($values);
  $vwValues:();
  $vwValuesWide:();
  $strParams:'';
  @for $i from 1 through $max {
    $value: nth($values, $i);
    $strParams:quote($value);
    @if (type-of($value) == string) or ($value == 0) or str-index($strParams,'%') {
        $vwValues: append($vwValues,unquote($value));
        $vwValuesWide: append($vwValuesWide,($value));
    } @else {
      $vwValues: append($vwValues,px2vh($value));
      $vwValuesWide: append($vwValuesWide,px2vw4wide($value));
    }
  }
  // @debug $vwValues;
  & {
    #{$prop}: $vwValues;
  }
  @include widescreen {
    #{$prop}: $vwValuesWide;
  }
  
}
@mixin res-size($args...) {
  & {
    @each $property, $px in keywords($args) {
      #{$property}: px2vh($px);
    }
  }
  @include widescreen {
    @each $property, $px in keywords($args) {
      #{$property}: px2vw4wide($px);
    }
  }
  // @include widescreenadd {
  //   @each $property, $px in keywords($args) {
  //     #{$property}: px2vh4wideadd($px);
  //   }
  // }
}

@mixin res-size-important($args...) {
  & {
    @each $property, $px in keywords($args) {
      #{$property}: px2vh($px) !important;
    }
  }
  @include widescreen {
    @each $property, $px in keywords($args) {
      #{$property}: px2vh4wide($px) !important;
    }
  }
}

@mixin keyframes($animationName){
  @-webkit-keyframes #{$animationName} {
      @content;
  }
  @-moz-keyframes #{$animationName} {
      @content;
  }
  @-o-keyframes #{$animationName} {
      @content;
  }
  @keyframes #{$animationName} {
      @content;
  }
}

@mixin animation($name, $time:1s,$ease:ease-out,$fillmode:backwards){
  animation:$name $time $ease $fillmode;
  -moz-animation:$name $time $ease $fillmode;
  -webkit-animation:$name $time $ease $fillmode;
  -o-animation:$name $time $ease $fillmode;
}
@mixin ellipsis-line($line){
	overflow : hidden;
	text-overflow: ellipsis;
  word-break: break-word;
	display: -webkit-box;
	-webkit-line-clamp: $line; /* 行数*/
	/* autoprefixer: off */
  -webkit-box-orient:vertical;
  // -webkit-box-pack: center;
  // -webkit-box-align: center;
	/*! autoprefixer: on */
}
@mixin ellipsis-line-middle($line){
  overflow: hidden;
  -webkit-line-clamp: $line;
  /* autoprefixer: off */
  -webkit-box-orient: vertical;
   text-overflow:ellipsis;
   display: -webkit-box;
   -webkit-box-pack: center;
   -webkit-box-align: center;
   word-break: break-word;
   	/*! autoprefixer: on */
}